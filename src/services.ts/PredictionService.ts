import axios from "axios";

/**
 * üîπ ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ BASE_URL ‡πÄ‡∏õ‡πá‡∏ô IP ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏ô backend
 *    - ‡∏ñ‡πâ‡∏≤‡πÉ‡∏ä‡πâ‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠‡∏à‡∏£‡∏¥‡∏á: ‡πÉ‡∏ä‡πâ IP ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏≠‡∏°‡πÉ‡∏ô‡∏ß‡∏á Wi-Fi ‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô ‡πÄ‡∏ä‡πà‡∏ô "http://192.168.1.10:8000"
 *    - ‡∏ñ‡πâ‡∏≤‡∏£‡∏±‡∏ô‡πÉ‡∏ô Emulator (Android): ‡πÉ‡∏ä‡πâ "http://10.0.2.2:8000"
 *    - ‡∏ñ‡πâ‡∏≤‡πÉ‡∏ä‡πâ Expo Go ‡πÉ‡∏ô‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠: ‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ IP ‡∏à‡∏£‡∏¥‡∏á‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏≠‡∏°‡∏î‡πâ‡∏ß‡∏¢
 */
const BASE_URL = "http://10.0.0.48"; 

/**
 * üîπ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô predictImage
 * ‡∏™‡πà‡∏á‡∏†‡∏≤‡∏û‡πÑ‡∏õ‡∏¢‡∏±‡∏á backend ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÇ‡∏°‡πÄ‡∏î‡∏• (.pkl) ‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢
 * ‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤
 */
export const PredictionService = async (imageUri: string) => {
  try {
    // ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏†‡∏≤‡∏û‡πÄ‡∏õ‡πá‡∏ô FormData
    const formData = new FormData();
    formData.append("file", {
      uri: imageUri,
      name: "photo.jpg",
      type: "image/jpeg",
    } as any);

    // ‡∏™‡πà‡∏á‡∏†‡∏≤‡∏û‡πÑ‡∏õ‡∏¢‡∏±‡∏á API /predict (FastAPI route)
    const response = await axios.post(`${BASE_URL}/predict`, formData, {
      headers: {
        "Content-Type": "multipart/form-data",
      },
    });

    return response.data;

  } catch (error: any) {
    console.error("Prediction error:", error.message);
    throw new Error("‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏†‡∏≤‡∏û‡πÑ‡∏î‡πâ ‡πÇ‡∏õ‡∏£‡∏î‡∏•‡∏≠‡∏á‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á");
  }
};

/**
 * üîπ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ API
 * (‡πÉ‡∏ä‡πâ‡∏ï‡∏≠‡∏ô‡πÅ‡∏£‡∏Å‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏ä‡πá‡∏Å‡∏ß‡πà‡∏≤ backend ‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå‡πÑ‡∏´‡∏°)
 */
export const testConnection = async () => {
  try {
    const response = await axios.get(`${BASE_URL}`);
    console.log("Connected to backend:", response.data);
  } catch (error) {
    console.error("‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ backend ‡πÑ‡∏î‡πâ");
  }
};
